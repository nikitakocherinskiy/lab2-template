name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/grading-app
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies for gateway-service
        run: npm ci --prefix gateway-service

      - name: Install dependencies for payment-service
        run: npm ci --prefix payment-service

      - name: Install dependencies for car-service
        run: npm ci --prefix car-service

      - name: Install dependencies for rental-service
        run: npm ci --prefix rental-service

      - name: Build gateway-service
        run: npm run build --prefix gateway-service

      - name: Build payment-service
        run: npm run build --prefix payment-service

      - name: Build car-service
        run: npm run build --prefix car-service

      - name: Build rental-service
        run: npm run build --prefix rental-service

      - name: Database migration for payment-service
        run: npm run db:push --prefix payment-service

      - name: Database migration for car-service
        run: npm run db:push --prefix car-service

      - name: Database migration for rental-service
        run: npm run db:push --prefix rental-service

      - name: Run Unit Tests for gateway-service
        run: npm run test --prefix gateway-service

      - name: Run Unit Tests for payment-service
        run: npm run test --prefix payment-service

      - name: Run Unit Tests for car-service
        run: npm run test --prefix car-service

      - name: Run Unit Tests for rental-service
        run: npm run test --prefix rental-service

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Send project files on VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "car-service,filldb,gateway-service,payment-service,postgres,postman,rental-service,scripts,docker-compose.yml"
          target: /home/${{ secrets.SSH_USER }}/car_rental

      - name: Build and up person-service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/${{ secrets.SSH_USER }}/car_rental
            echo ${{ secrets.SSH_USER }} | sudo -S docker-compose down
            echo ${{ secrets.SSH_USER }} | sudo -S docker rmi gateway-service
            echo ${{ secrets.SSH_USER }} | sudo -S docker rmi rental-service
            echo ${{ secrets.SSH_USER }} | sudo -S docker rmi car_service
            echo ${{ secrets.SSH_USER }} | sudo -S docker rmi payment_service
            echo ${{ secrets.SSH_USER }} | sudo -S docker-compose up -d

  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rsoi-lab2:latest

  api-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Sleep for 7 minutes
        run: sleep 420s
        shell: bash

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: collection.json
          environment: environment.json
          delayRequest: 15
          reporters: '[ "cli" ]'
